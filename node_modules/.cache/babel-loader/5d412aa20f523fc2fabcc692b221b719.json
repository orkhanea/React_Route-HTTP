{"ast":null,"code":"var _jsxFileName = \"/Users/orkhan/Downloads/09-time-to-practice-starting-code/src/pages/QuoteDetail.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment } from 'react';\nimport { useParams, Route, Link, useRouteMatch } from 'react-router-dom';\nimport Comments from '../components/comments/Comments';\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_QUOTES = [{\n  id: 'q1',\n  author: 'Orkhan',\n  text: 'Dummy quote 1'\n}, {\n  id: 'q2',\n  author: 'Ali',\n  text: 'Dummy quote 2'\n}, {\n  id: 'q3',\n  author: 'Rasul',\n  text: 'Dummy quote 3'\n}, {\n  id: 'q4',\n  author: 'Hashim',\n  text: 'Dummy quote 4'\n}];\n\nconst QuoteDetail = () => {\n  _s();\n\n  const match = useRouteMatch();\n  const params = useParams();\n  let quote = DUMMY_QUOTES.find(q => q.id === params.quoteId);\n\n  if (!quote) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Quote Found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: quote.text,\n      author: quote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: match.path,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn--flat\",\n          to: `${match.url}/comments`,\n          children: \"Comment \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(QuoteDetail, \"rdwgqxZeilGF5b/P9rLFIDXyAnM=\", false, function () {\n  return [useRouteMatch, useParams];\n});\n\n_c = QuoteDetail;\nexport default QuoteDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"names":["Fragment","useParams","Route","Link","useRouteMatch","Comments","HighlightedQuote","DUMMY_QUOTES","id","author","text","QuoteDetail","match","params","quote","find","q","quoteId","path","url"],"sources":["/Users/orkhan/Downloads/09-time-to-practice-starting-code/src/pages/QuoteDetail.js"],"sourcesContent":["import { Fragment } from 'react';\nimport { useParams, Route, Link, useRouteMatch } from 'react-router-dom';\nimport Comments from '../components/comments/Comments'\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\n\nconst DUMMY_QUOTES = [\n    { id: 'q1', author: 'Orkhan', text: 'Dummy quote 1' },\n    { id: 'q2', author: 'Ali', text: 'Dummy quote 2' },\n    { id: 'q3', author: 'Rasul', text: 'Dummy quote 3' },\n    { id: 'q4', author: 'Hashim', text: 'Dummy quote 4' },\n]\n\nconst QuoteDetail = () => {\n    const match = useRouteMatch()\n    const params = useParams();\n    let quote = DUMMY_QUOTES.find(q => q.id === params.quoteId)\n\n    if (!quote) {\n        return <p>No Quote Found</p>\n    }\n\n    return (\n        <Fragment>\n            <HighlightedQuote text={quote.text} author={quote.author} />\n            <Route path={match.path} exact>\n                <div className='centered'>\n                    <Link className='btn--flat' to={`${match.url}/comments`} >Comment </Link>\n                </div>\n            </Route>    \n            <Route path={`${match.path}/comments`} >\n                <Comments />\n            </Route>\n        </Fragment>\n\n    )\n}\nexport default QuoteDetail;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,IAA3B,EAAiCC,aAAjC,QAAsD,kBAAtD;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;;AAEA,MAAMC,YAAY,GAAG,CACjB;EAAEC,EAAE,EAAE,IAAN;EAAYC,MAAM,EAAE,QAApB;EAA8BC,IAAI,EAAE;AAApC,CADiB,EAEjB;EAAEF,EAAE,EAAE,IAAN;EAAYC,MAAM,EAAE,KAApB;EAA2BC,IAAI,EAAE;AAAjC,CAFiB,EAGjB;EAAEF,EAAE,EAAE,IAAN;EAAYC,MAAM,EAAE,OAApB;EAA6BC,IAAI,EAAE;AAAnC,CAHiB,EAIjB;EAAEF,EAAE,EAAE,IAAN;EAAYC,MAAM,EAAE,QAApB;EAA8BC,IAAI,EAAE;AAApC,CAJiB,CAArB;;AAOA,MAAMC,WAAW,GAAG,MAAM;EAAA;;EACtB,MAAMC,KAAK,GAAGR,aAAa,EAA3B;EACA,MAAMS,MAAM,GAAGZ,SAAS,EAAxB;EACA,IAAIa,KAAK,GAAGP,YAAY,CAACQ,IAAb,CAAkBC,CAAC,IAAIA,CAAC,CAACR,EAAF,KAASK,MAAM,CAACI,OAAvC,CAAZ;;EAEA,IAAI,CAACH,KAAL,EAAY;IACR,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACH;;EAED,oBACI,QAAC,QAAD;IAAA,wBACI,QAAC,gBAAD;MAAkB,IAAI,EAAEA,KAAK,CAACJ,IAA9B;MAAoC,MAAM,EAAEI,KAAK,CAACL;IAAlD;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI,QAAC,KAAD;MAAO,IAAI,EAAEG,KAAK,CAACM,IAAnB;MAAyB,KAAK,MAA9B;MAAA,uBACI;QAAK,SAAS,EAAC,UAAf;QAAA,uBACI,QAAC,IAAD;UAAM,SAAS,EAAC,WAAhB;UAA4B,EAAE,EAAG,GAAEN,KAAK,CAACO,GAAI,WAA7C;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAFJ,eAOI,QAAC,KAAD;MAAO,IAAI,EAAG,GAAEP,KAAK,CAACM,IAAK,WAA3B;MAAA,uBACI,QAAC,QAAD;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAPJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAcH,CAvBD;;GAAMP,W;UACYP,a,EACCH,S;;;KAFbU,W;AAwBN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}