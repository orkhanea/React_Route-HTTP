{"ast":null,"code":"var _jsxFileName = \"/Users/orkhan/Downloads/09-time-to-practice-starting-code/src/pages/QuoteDetail.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useEffect } from 'react';\nimport { useParams, Route, Link, useRouteMatch } from 'react-router-dom';\nimport Comments from '../components/comments/Comments';\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\nimport useHttp from '../hooks/use-http';\nimport { getSingleQuote } from '../lib/api';\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuoteDetail = () => {\n  _s();\n\n  const match = useRouteMatch();\n  const params = useParams();\n  const {\n    sendRequest,\n    status,\n    error,\n    data: quote\n  } = useHttp(getSingleQuote, true);\n  useEffect(() => {\n    sendRequest(params.quoteId);\n  }, [sendRequest, params]);\n\n  if (status === 'pending') {\n    /*#__PURE__*/\n    _jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered focused\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (status === 'completed' && (!quote || quote.length === 0)) {\n    return /*#__PURE__*/_jsxDEV(NoQuotesFound, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  } // let quote = loadedData.find(q => q.id === params.quoteId)\n\n\n  console.log(quote);\n\n  if (!quote) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Quote Found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: quote.text,\n      author: quote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: match.path,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn--flat\",\n          to: `${match.url}/comments`,\n          children: \"Comment \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(QuoteDetail, \"knxcUjMT6eyRIcw2+7jsbkE0vJw=\", false, function () {\n  return [useRouteMatch, useParams, useHttp];\n});\n\n_c = QuoteDetail;\nexport default QuoteDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"names":["Fragment","useEffect","useParams","Route","Link","useRouteMatch","Comments","HighlightedQuote","useHttp","getSingleQuote","LoadingSpinner","NoQuotesFound","QuoteDetail","match","params","sendRequest","status","error","data","quote","quoteId","length","console","log","text","author","path","url"],"sources":["/Users/orkhan/Downloads/09-time-to-practice-starting-code/src/pages/QuoteDetail.js"],"sourcesContent":["import { Fragment, useEffect } from 'react';\nimport { useParams, Route, Link, useRouteMatch } from 'react-router-dom';\nimport Comments from '../components/comments/Comments'\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\nimport useHttp from '../hooks/use-http';\nimport { getSingleQuote } from '../lib/api';\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\n\nconst QuoteDetail = () => {\n    const match = useRouteMatch()\n    const params = useParams();\n\n    const { sendRequest, status, error, data: quote } = useHttp(getSingleQuote, true)\n\n    useEffect(() => {\n        sendRequest(params.quoteId)\n    }, [sendRequest, params])\n\n    if (status === 'pending') {\n        <div className='centered'>\n            <LoadingSpinner />\n        </div>\n    }\n\n    if (error) {\n        return <p className='centered focused'>{error}</p>\n    }\n\n    if (status === 'completed' && (!quote || quote.length === 0)) {\n        return (\n            <NoQuotesFound />\n        )\n    }\n\n    // let quote = loadedData.find(q => q.id === params.quoteId)\n\n    console.log(quote)\n    if (!quote) {\n        return <p>No Quote Found</p>\n    }\n\n    return (\n        <Fragment>\n            <HighlightedQuote text={quote.text} author={quote.author} />\n            <Route path={match.path} exact>\n                <div className='centered'>\n                    <Link className='btn--flat' to={`${match.url}/comments`} >Comment </Link>\n                </div>\n            </Route>\n            <Route path={`${match.path}/comments`} >\n                <Comments />\n            </Route>\n        </Fragment>\n\n    )\n}\nexport default QuoteDetail;\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,IAA3B,EAAiCC,aAAjC,QAAsD,kBAAtD;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,cAAT,QAA+B,YAA/B;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,aAAP,MAA0B,oCAA1B;;;AAEA,MAAMC,WAAW,GAAG,MAAM;EAAA;;EACtB,MAAMC,KAAK,GAAGR,aAAa,EAA3B;EACA,MAAMS,MAAM,GAAGZ,SAAS,EAAxB;EAEA,MAAM;IAAEa,WAAF;IAAeC,MAAf;IAAuBC,KAAvB;IAA8BC,IAAI,EAAEC;EAApC,IAA8CX,OAAO,CAACC,cAAD,EAAiB,IAAjB,CAA3D;EAEAR,SAAS,CAAC,MAAM;IACZc,WAAW,CAACD,MAAM,CAACM,OAAR,CAAX;EACH,CAFQ,EAEN,CAACL,WAAD,EAAcD,MAAd,CAFM,CAAT;;EAIA,IAAIE,MAAM,KAAK,SAAf,EAA0B;IACtB;IAAA;MAAK,SAAS,EAAC,UAAf;MAAA,uBACI,QAAC,cAAD;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA;EAGH;;EAED,IAAIC,KAAJ,EAAW;IACP,oBAAO;MAAG,SAAS,EAAC,kBAAb;MAAA,UAAiCA;IAAjC;MAAA;MAAA;MAAA;IAAA,QAAP;EACH;;EAED,IAAID,MAAM,KAAK,WAAX,KAA2B,CAACG,KAAD,IAAUA,KAAK,CAACE,MAAN,KAAiB,CAAtD,CAAJ,EAA8D;IAC1D,oBACI,QAAC,aAAD;MAAA;MAAA;MAAA;IAAA,QADJ;EAGH,CAxBqB,CA0BtB;;;EAEAC,OAAO,CAACC,GAAR,CAAYJ,KAAZ;;EACA,IAAI,CAACA,KAAL,EAAY;IACR,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACH;;EAED,oBACI,QAAC,QAAD;IAAA,wBACI,QAAC,gBAAD;MAAkB,IAAI,EAAEA,KAAK,CAACK,IAA9B;MAAoC,MAAM,EAAEL,KAAK,CAACM;IAAlD;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI,QAAC,KAAD;MAAO,IAAI,EAAEZ,KAAK,CAACa,IAAnB;MAAyB,KAAK,MAA9B;MAAA,uBACI;QAAK,SAAS,EAAC,UAAf;QAAA,uBACI,QAAC,IAAD;UAAM,SAAS,EAAC,WAAhB;UAA4B,EAAE,EAAG,GAAEb,KAAK,CAACc,GAAI,WAA7C;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAFJ,eAOI,QAAC,KAAD;MAAO,IAAI,EAAG,GAAEd,KAAK,CAACa,IAAK,WAA3B;MAAA,uBACI,QAAC,QAAD;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAPJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAcH,CA/CD;;GAAMd,W;UACYP,a,EACCH,S,EAEqCM,O;;;KAJlDI,W;AAgDN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}