{"ast":null,"code":"var _jsxFileName = \"/Users/orkhan/Downloads/09-time-to-practice-starting-code/src/components/comments/Comments.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Comments = () => {\n  _s();\n\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const {\n    sendRequest,\n    data: loadedQuotes,\n    status,\n    error\n  } = useHttp(getAllComments, true);\n  useEffect(() => {\n    const quotes = loadedQuotes;\n  }, [status, error, loadedQuotes]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = () => {\n    sendRequest(params.quoteId);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.comments,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), !isAddingComment && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: startAddCommentHandler,\n      children: \"Add a Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), isAddingComment && /*#__PURE__*/_jsxDEV(NewCommentForm, {\n      quoteId: params.quoteId,\n      onAddedComment: addedCommentHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Comments...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Comments, \"x/yfvZK65v4poHdBviQDyW9azVc=\", false, function () {\n  return [useParams, useHttp];\n});\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["useEffect","useState","useParams","useHttp","getAllComments","classes","NewCommentForm","Comments","isAddingComment","setIsAddingComment","params","sendRequest","data","loadedQuotes","status","error","quotes","startAddCommentHandler","addedCommentHandler","quoteId","comments"],"sources":["/Users/orkhan/Downloads/09-time-to-practice-starting-code/src/components/comments/Comments.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams()\n  const {sendRequest, data: loadedQuotes, status, error} = useHttp(getAllComments, true)\n\n  useEffect(()=>{\n\n    const quotes = loadedQuotes\n\n  },[status, error, loadedQuotes])\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler =()=>{\n\n    sendRequest(params.quoteId)\n\n  }\n  \n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm quoteId={params.quoteId} onAddedComment={addedCommentHandler}  />}\n      <p>Comments...</p>\n    </section>\n  );\n};\n\nexport default Comments;\n"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACrB,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,CAAC,KAAD,CAAtD;EACA,MAAMS,MAAM,GAAGR,SAAS,EAAxB;EACA,MAAM;IAACS,WAAD;IAAcC,IAAI,EAAEC,YAApB;IAAkCC,MAAlC;IAA0CC;EAA1C,IAAmDZ,OAAO,CAACC,cAAD,EAAiB,IAAjB,CAAhE;EAEAJ,SAAS,CAAC,MAAI;IAEZ,MAAMgB,MAAM,GAAGH,YAAf;EAED,CAJQ,EAIP,CAACC,MAAD,EAASC,KAAT,EAAgBF,YAAhB,CAJO,CAAT;;EAMA,MAAMI,sBAAsB,GAAG,MAAM;IACnCR,kBAAkB,CAAC,IAAD,CAAlB;EACD,CAFD;;EAIA,MAAMS,mBAAmB,GAAE,MAAI;IAE7BP,WAAW,CAACD,MAAM,CAACS,OAAR,CAAX;EAED,CAJD;;EAMA,oBACE;IAAS,SAAS,EAAEd,OAAO,CAACe,QAA5B;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAEG,CAACZ,eAAD,iBACC;MAAQ,SAAS,EAAC,KAAlB;MAAwB,OAAO,EAAES,sBAAjC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHJ,EAOGT,eAAe,iBAAI,QAAC,cAAD;MAAgB,OAAO,EAAEE,MAAM,CAACS,OAAhC;MAAyC,cAAc,EAAED;IAAzD;MAAA;MAAA;MAAA;IAAA,QAPtB,eAQE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QARF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAYD,CAjCD;;GAAMX,Q;UAEWL,S,EAC0CC,O;;;KAHrDI,Q;AAmCN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}