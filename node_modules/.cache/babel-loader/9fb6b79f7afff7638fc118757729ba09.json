{"ast":null,"code":"var _jsxFileName = \"/Users/orkhan/Downloads/09-time-to-practice-starting-code/src/components/comments/Comments.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport CommentsList from './CommentsList';\nimport { useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Comments = () => {\n  _s();\n\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const {\n    quoteId\n  } = params;\n  const {\n    sendRequest,\n    data: loadedComments,\n    status,\n    error\n  } = useHttp(getAllComments);\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n  let comments;\n\n  if (status === 'pending') {\n    comments = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this);\n  }\n\n  if (status === 'completed' && loadedComments && loadedComments.length > 0) {\n    comments = /*#__PURE__*/_jsxDEV(CommentsList, {\n      comments: loadedComments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (status === 'completed' && (!loadedComments || loadedComments.length === 0)) {\n    comments = /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered\",\n      children: \"No comments were added yet!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.comments,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), !isAddingComment && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: startAddCommentHandler,\n      children: \"Add a Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), isAddingComment && /*#__PURE__*/_jsxDEV(NewCommentForm, {\n      quoteId: params.quoteId,\n      onAddedComment: addedCommentHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 27\n    }, this), comments]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Comments, \"WBbwLq4m6D49tyn+4KLl3sO4iOw=\", false, function () {\n  return [useParams, useHttp];\n});\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["useEffect","useState","useParams","useHttp","getAllComments","LoadingSpinner","classes","NewCommentForm","CommentsList","useCallback","Comments","isAddingComment","setIsAddingComment","params","quoteId","sendRequest","data","loadedComments","status","error","startAddCommentHandler","addedCommentHandler","comments","length"],"sources":["/Users/orkhan/Downloads/09-time-to-practice-starting-code/src/components/comments/Comments.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport CommentsList from './CommentsList'\nimport { useCallback } from 'react';\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams()\n  const { quoteId } = params\n  const { sendRequest, data: loadedComments, status, error } = useHttp(getAllComments)\n\n  useEffect(() => {\n    sendRequest(quoteId)\n\n  }, [quoteId, sendRequest])\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId)\n  }, [sendRequest, quoteId])\n  let comments;\n\n  if (status === 'pending') {\n    comments = (<div className='centered'>\n      <LoadingSpinner />\n    </div>)\n  }\n\n  if (status === 'completed' && loadedComments && loadedComments.length > 0) {\n    comments = <CommentsList comments={loadedComments} />\n  }\n\n  if (status === 'completed' && (!loadedComments || loadedComments.length === 0)) {\n    comments = <p className='centered'>No comments were added yet!</p>\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm quoteId={params.quoteId} onAddedComment={addedCommentHandler} />}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,WAAT,QAA4B,OAA5B;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACrB,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCX,QAAQ,CAAC,KAAD,CAAtD;EACA,MAAMY,MAAM,GAAGX,SAAS,EAAxB;EACA,MAAM;IAAEY;EAAF,IAAcD,MAApB;EACA,MAAM;IAAEE,WAAF;IAAeC,IAAI,EAAEC,cAArB;IAAqCC,MAArC;IAA6CC;EAA7C,IAAuDhB,OAAO,CAACC,cAAD,CAApE;EAEAJ,SAAS,CAAC,MAAM;IACde,WAAW,CAACD,OAAD,CAAX;EAED,CAHQ,EAGN,CAACA,OAAD,EAAUC,WAAV,CAHM,CAAT;;EAKA,MAAMK,sBAAsB,GAAG,MAAM;IACnCR,kBAAkB,CAAC,IAAD,CAAlB;EACD,CAFD;;EAIA,MAAMS,mBAAmB,GAAGZ,WAAW,CAAC,MAAM;IAC5CM,WAAW,CAACD,OAAD,CAAX;EACD,CAFsC,EAEpC,CAACC,WAAD,EAAcD,OAAd,CAFoC,CAAvC;EAGA,IAAIQ,QAAJ;;EAEA,IAAIJ,MAAM,KAAK,SAAf,EAA0B;IACxBI,QAAQ,gBAAI;MAAK,SAAS,EAAC,UAAf;MAAA,uBACV,QAAC,cAAD;QAAA;QAAA;QAAA;MAAA;IADU;MAAA;MAAA;MAAA;IAAA,QAAZ;EAGD;;EAED,IAAIJ,MAAM,KAAK,WAAX,IAA0BD,cAA1B,IAA4CA,cAAc,CAACM,MAAf,GAAwB,CAAxE,EAA2E;IACzED,QAAQ,gBAAG,QAAC,YAAD;MAAc,QAAQ,EAAEL;IAAxB;MAAA;MAAA;MAAA;IAAA,QAAX;EACD;;EAED,IAAIC,MAAM,KAAK,WAAX,KAA2B,CAACD,cAAD,IAAmBA,cAAc,CAACM,MAAf,KAA0B,CAAxE,CAAJ,EAAgF;IAC9ED,QAAQ,gBAAG;MAAG,SAAS,EAAC,UAAb;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAX;EACD;;EAED,oBACE;IAAS,SAAS,EAAEhB,OAAO,CAACgB,QAA5B;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAEG,CAACX,eAAD,iBACC;MAAQ,SAAS,EAAC,KAAlB;MAAwB,OAAO,EAAES,sBAAjC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHJ,EAOGT,eAAe,iBAAI,QAAC,cAAD;MAAgB,OAAO,EAAEE,MAAM,CAACC,OAAhC;MAAyC,cAAc,EAAEO;IAAzD;MAAA;MAAA;MAAA;IAAA,QAPtB,EAQGC,QARH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAYD,CA9CD;;GAAMZ,Q;UAEWR,S,EAE8CC,O;;;KAJzDO,Q;AAgDN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}