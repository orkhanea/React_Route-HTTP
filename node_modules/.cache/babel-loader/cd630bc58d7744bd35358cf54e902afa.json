{"ast":null,"code":"var _jsxFileName = \"/Users/orkhan/Downloads/09-time-to-practice-starting-code/src/components/comments/NewCommentForm.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport useHttp from '../../hooks/use-http';\nimport { addComment } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './NewCommentForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewCommentForm = props => {\n  _s();\n\n  const {\n    sendRequest,\n    data: loadedData,\n    error,\n    status\n  } = useHttp(addComment, true);\n  const commentTextRef = useRef();\n  const params = useParams();\n  const {\n    quoteId\n  } = params;\n  useEffect(() => {}, [status]);\n\n  const submitFormHandler = event => {\n    event.preventDefault();\n    const commentData = {\n      quoteId: quoteId,\n      commentData: commentTextRef.current.value\n    };\n    sendRequest(commentData); // optional: Could validate here\n    // sendRequest()\n    // send comment to server\n    // getAllComments\n  };\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered focused\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (status === 'success') {\n    commentTextRef.current.value = '';\n    console.log(status);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: submitFormHandler,\n    children: [status && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      onSubmit: submitFormHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"comment\",\n        children: \"Your Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"comment\",\n        rows: \"5\",\n        ref: commentTextRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        children: \"Add Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewCommentForm, \"NVs5+ZvtuwliikPk+pqLbz+K+No=\", false, function () {\n  return [useHttp, useParams];\n});\n\n_c = NewCommentForm;\nexport default NewCommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewCommentForm\");","map":{"version":3,"names":["useEffect","useRef","useParams","useHttp","addComment","LoadingSpinner","classes","NewCommentForm","props","sendRequest","data","loadedData","error","status","commentTextRef","params","quoteId","submitFormHandler","event","preventDefault","commentData","current","value","console","log","form","control","actions"],"sources":["/Users/orkhan/Downloads/09-time-to-practice-starting-code/src/components/comments/NewCommentForm.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport useHttp from '../../hooks/use-http';\nimport { addComment } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\n\nimport classes from './NewCommentForm.module.css';\n\nconst NewCommentForm = (props) => {\n  const { sendRequest, data: loadedData, error, status } = useHttp(addComment, true)\n  const commentTextRef = useRef();\n  const params = useParams()\n  const { quoteId } = params;\n\n  useEffect(() => {\n\n  }, [status])\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    const commentData = {\n      quoteId: quoteId,\n      commentData: commentTextRef.current.value\n    }\n\n    sendRequest(commentData)\n    // optional: Could validate here\n    // sendRequest()\n    // send comment to server\n    // getAllComments\n  };\n\n  if (error) {\n    return <p className='centered focused'>{error}</p>\n  }\n\n  if (status === 'success') {\n    commentTextRef.current.value = ''\n    console.log(status)\n  }\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status &&\n        <div className='centered'>\n          <LoadingSpinner />\n        </div>\n      }\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,MAAT,QAAuB,OAAvB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AAEA,OAAOC,OAAP,MAAoB,6BAApB;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;EAAA;;EAChC,MAAM;IAAEC,WAAF;IAAeC,IAAI,EAAEC,UAArB;IAAiCC,KAAjC;IAAwCC;EAAxC,IAAmDV,OAAO,CAACC,UAAD,EAAa,IAAb,CAAhE;EACA,MAAMU,cAAc,GAAGb,MAAM,EAA7B;EACA,MAAMc,MAAM,GAAGb,SAAS,EAAxB;EACA,MAAM;IAAEc;EAAF,IAAcD,MAApB;EAEAf,SAAS,CAAC,MAAM,CAEf,CAFQ,EAEN,CAACa,MAAD,CAFM,CAAT;;EAIA,MAAMI,iBAAiB,GAAIC,KAAD,IAAW;IACnCA,KAAK,CAACC,cAAN;IAEA,MAAMC,WAAW,GAAG;MAClBJ,OAAO,EAAEA,OADS;MAElBI,WAAW,EAAEN,cAAc,CAACO,OAAf,CAAuBC;IAFlB,CAApB;IAKAb,WAAW,CAACW,WAAD,CAAX,CARmC,CASnC;IACA;IACA;IACA;EACD,CAbD;;EAeA,IAAIR,KAAJ,EAAW;IACT,oBAAO;MAAG,SAAS,EAAC,kBAAb;MAAA,UAAiCA;IAAjC;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAED,IAAIC,MAAM,KAAK,SAAf,EAA0B;IACxBC,cAAc,CAACO,OAAf,CAAuBC,KAAvB,GAA+B,EAA/B;IACAC,OAAO,CAACC,GAAR,CAAYX,MAAZ;EACD;;EAED,oBACE;IAAM,SAAS,EAAEP,OAAO,CAACmB,IAAzB;IAA+B,QAAQ,EAAER,iBAAzC;IAAA,WACGJ,MAAM,iBACL;MAAK,SAAS,EAAC,UAAf;MAAA,uBACE,QAAC,cAAD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAFJ,eAME;MAAK,SAAS,EAAEP,OAAO,CAACoB,OAAxB;MAAiC,QAAQ,EAAET,iBAA3C;MAAA,wBACE;QAAO,OAAO,EAAC,SAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAU,EAAE,EAAC,SAAb;QAAuB,IAAI,EAAC,GAA5B;QAAgC,GAAG,EAAEH;MAArC;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QANF,eAUE;MAAK,SAAS,EAAER,OAAO,CAACqB,OAAxB;MAAA,uBACE;QAAQ,SAAS,EAAC,KAAlB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAVF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAgBD,CAlDD;;GAAMpB,c;UACqDJ,O,EAE1CD,S;;;KAHXK,c;AAoDN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}