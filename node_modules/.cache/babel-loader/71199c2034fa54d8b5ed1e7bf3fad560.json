{"ast":null,"code":"var _jsxFileName = \"/Users/orkhan/Downloads/09-time-to-practice-starting-code/src/pages/AllQuotes.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useEffect } from 'react';\nimport QuoteList from '../components/quotes/QuoteList';\nimport useHttp from '../hooks/use-http';\nimport { getAllQuotes } from '../lib/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_QUOTES = [{\n  id: 'q1',\n  author: 'Orkhan',\n  text: 'Dummy quote 1'\n}, {\n  id: 'q2',\n  author: 'Ali',\n  text: 'Dummy quote 2'\n}, {\n  id: 'q3',\n  author: 'Rasul',\n  text: 'Dummy quote 3'\n}, {\n  id: 'q4',\n  author: 'Hashim',\n  text: 'Dummy quote 4'\n}];\n\nconst AllQuotes = () => {\n  _s();\n\n  const {\n    sendRequest,\n    status\n  } = useHttp(getAllQuotes);\n  const newData = [];\n  useEffect(() => {\n    sendRequest();\n    console.log();\n  }, [status]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(QuoteList, {\n      quotes: DUMMY_QUOTES\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AllQuotes, \"+uqzwCqk8/7YgXLk+MEogbFyugk=\", false, function () {\n  return [useHttp];\n});\n\n_c = AllQuotes;\nexport default AllQuotes;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllQuotes\");","map":{"version":3,"names":["Fragment","useEffect","QuoteList","useHttp","getAllQuotes","DUMMY_QUOTES","id","author","text","AllQuotes","sendRequest","status","newData","console","log"],"sources":["/Users/orkhan/Downloads/09-time-to-practice-starting-code/src/pages/AllQuotes.js"],"sourcesContent":["import { Fragment, useEffect } from 'react'\nimport QuoteList from '../components/quotes/QuoteList'\nimport useHttp from '../hooks/use-http'\nimport { getAllQuotes } from '../lib/api'\n\nconst DUMMY_QUOTES = [\n    { id: 'q1', author: 'Orkhan', text: 'Dummy quote 1' },\n    { id: 'q2', author: 'Ali', text: 'Dummy quote 2' },\n    { id: 'q3', author: 'Rasul', text: 'Dummy quote 3' },\n    { id: 'q4', author: 'Hashim', text: 'Dummy quote 4' },\n]\n\nconst AllQuotes = () => {\n\n    const {sendRequest, status} = useHttp(getAllQuotes)\n    const newData = [];\n    \n    useEffect(()=>{\n        sendRequest()\n        console.log()\n    },[status])\n\n    return (\n        <Fragment>\n            <QuoteList quotes={DUMMY_QUOTES}/>\n        </Fragment>\n    )\n}\nexport default AllQuotes;"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,YAAT,QAA6B,YAA7B;;AAEA,MAAMC,YAAY,GAAG,CACjB;EAAEC,EAAE,EAAE,IAAN;EAAYC,MAAM,EAAE,QAApB;EAA8BC,IAAI,EAAE;AAApC,CADiB,EAEjB;EAAEF,EAAE,EAAE,IAAN;EAAYC,MAAM,EAAE,KAApB;EAA2BC,IAAI,EAAE;AAAjC,CAFiB,EAGjB;EAAEF,EAAE,EAAE,IAAN;EAAYC,MAAM,EAAE,OAApB;EAA6BC,IAAI,EAAE;AAAnC,CAHiB,EAIjB;EAAEF,EAAE,EAAE,IAAN;EAAYC,MAAM,EAAE,QAApB;EAA8BC,IAAI,EAAE;AAApC,CAJiB,CAArB;;AAOA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EAEpB,MAAM;IAACC,WAAD;IAAcC;EAAd,IAAwBR,OAAO,CAACC,YAAD,CAArC;EACA,MAAMQ,OAAO,GAAG,EAAhB;EAEAX,SAAS,CAAC,MAAI;IACVS,WAAW;IACXG,OAAO,CAACC,GAAR;EACH,CAHQ,EAGP,CAACH,MAAD,CAHO,CAAT;EAKA,oBACI,QAAC,QAAD;IAAA,uBACI,QAAC,SAAD;MAAW,MAAM,EAAEN;IAAnB;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH,CAfD;;GAAMI,S;UAE4BN,O;;;KAF5BM,S;AAgBN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}