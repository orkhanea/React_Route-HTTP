{"ast":null,"code":"var _jsxFileName = \"/Users/orkhan/Downloads/09-time-to-practice-starting-code/src/pages/AllQuotes.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport QuoteList from '../components/quotes/QuoteList';\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\nimport useHttp from '../hooks/use-http';\nimport { getAllQuotes } from '../lib/api';\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AllQuotes = () => {\n  _s();\n\n  const {\n    sendRequest,\n    status,\n    error,\n    data: loadedData\n  } = useHttp(getAllQuotes, true);\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n\n  if (status === 'pending') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered focused\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (status === 'completed' && (!loadedData || loadedData.length === 0)) {\n    return /*#__PURE__*/_jsxDEV(NoQuotesFound, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(QuoteList, {\n    quotes: loadedData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 12\n  }, this);\n};\n\n_s(AllQuotes, \"WILsNcJkA2PfiVVyAciKJC8kAcM=\", false, function () {\n  return [useHttp];\n});\n\n_c = AllQuotes;\nexport default AllQuotes;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllQuotes\");","map":{"version":3,"names":["useEffect","QuoteList","LoadingSpinner","useHttp","getAllQuotes","NoQuotesFound","AllQuotes","sendRequest","status","error","data","loadedData","length"],"sources":["/Users/orkhan/Downloads/09-time-to-practice-starting-code/src/pages/AllQuotes.js"],"sourcesContent":["import { useEffect } from 'react'\nimport QuoteList from '../components/quotes/QuoteList'\nimport LoadingSpinner from '../components/UI/LoadingSpinner'\nimport useHttp from '../hooks/use-http'\nimport { getAllQuotes } from '../lib/api'\nimport NoQuotesFound from '../components/quotes/NoQuotesFound'\n\nconst AllQuotes = () => {\n\n    const { sendRequest, status, error, data: loadedData } = useHttp(getAllQuotes, true)\n\n\n    useEffect(() => {\n        sendRequest()\n\n    }, [sendRequest])\n\n    if (status === 'pending') {\n        return (\n            <div className='centered'>\n                <LoadingSpinner />\n            </div>\n        )\n    }\n\n    if (error) {\n        return <p className='centered focused'>{error}</p>\n    }\n\n    if (status === 'completed' && (!loadedData || loadedData.length === 0)) {\n        return (\n            <NoQuotesFound />\n        )\n    }\n\n\n\n    return <QuoteList quotes={loadedData} />\n}\nexport default AllQuotes;"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,OAAOC,aAAP,MAA0B,oCAA1B;;;AAEA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EAEpB,MAAM;IAAEC,WAAF;IAAeC,MAAf;IAAuBC,KAAvB;IAA8BC,IAAI,EAAEC;EAApC,IAAmDR,OAAO,CAACC,YAAD,EAAe,IAAf,CAAhE;EAGAJ,SAAS,CAAC,MAAM;IACZO,WAAW;EAEd,CAHQ,EAGN,CAACA,WAAD,CAHM,CAAT;;EAKA,IAAIC,MAAM,KAAK,SAAf,EAA0B;IACtB,oBACI;MAAK,SAAS,EAAC,UAAf;MAAA,uBACI,QAAC,cAAD;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADJ;EAKH;;EAED,IAAIC,KAAJ,EAAW;IACP,oBAAO;MAAG,SAAS,EAAC,kBAAb;MAAA,UAAiCA;IAAjC;MAAA;MAAA;MAAA;IAAA,QAAP;EACH;;EAED,IAAID,MAAM,KAAK,WAAX,KAA2B,CAACG,UAAD,IAAeA,UAAU,CAACC,MAAX,KAAsB,CAAhE,CAAJ,EAAwE;IACpE,oBACI,QAAC,aAAD;MAAA;MAAA;MAAA;IAAA,QADJ;EAGH;;EAID,oBAAO,QAAC,SAAD;IAAW,MAAM,EAAED;EAAnB;IAAA;IAAA;IAAA;EAAA,QAAP;AACH,CA/BD;;GAAML,S;UAEuDH,O;;;KAFvDG,S;AAgCN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}